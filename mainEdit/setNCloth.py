import json

def setNClothParam(nClothShape,nClothParams):
    pm.setAttr(nClothShape + ".overrideEnabled", nClothParams[0])
    pm.setAttr(nClothShape + ".collide", nClothParams[0])
    pm.setAttr(nClothShape + ".selfCollide", nClothParams[0])
    pm.setAttr(nClothShape + ".collisionFlag", nClothParams[0])
    pm.setAttr(nClothShape + ".selfCollisionFlag", nClothParams[0])
    pm.setAttr(nClothShape + ".collideStrength", nClothParams[0])
    pm.setAttr(nClothShape + ".collisionLayer", nClothParams[0])
    pm.setAttr(nClothShape + ".thickness", nClothParams[0])
    pm.setAttr(nClothShape + ".selfCollideWidthScale", nClothParams[0])
    pm.setAttr(nClothShape + ".solverDisplay", nClothParams[0])
    pm.setAttr(nClothShape + ".displayColor", nClothParams[0])
    pm.setAttr(nClothShape + ".displayColorR", nClothParams[0])
    pm.setAttr(nClothShape + ".displayColorG", nClothParams[0])
    pm.setAttr(nClothShape + ".displayColorB", nClothParams[0])
    pm.setAttr(nClothShape + ".bounce", nClothParams[0])
    pm.setAttr(nClothShape + ".friction", nClothParams[0])
    pm.setAttr(nClothShape + ".stickiness", nClothParams[0])
    pm.setAttr(nClothShape + ".collideStrengthMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".collideStrengthMap", nClothParams[0])
    pm.setAttr(nClothShape + ".collideStrengthPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".thicknessMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".thicknessMap", nClothParams[0])
    pm.setAttr(nClothShape + ".thicknessPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".bounceMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".bounceMap", nClothParams[0])
    pm.setAttr(nClothShape + ".bouncePerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".frictionMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".frictionMap", nClothParams[0])
    pm.setAttr(nClothShape + ".frictionPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".stickinessMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".stickinessMap", nClothParams[0])
    pm.setAttr(nClothShape + ".stickinessPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".stretchResistance", nClothParams[0])
    pm.setAttr(nClothShape + ".compressionResistance", nClothParams[0])
    pm.setAttr(nClothShape + ".bendResistance", nClothParams[0])
    pm.setAttr(nClothShape + ".bendAngleDropoff", nClothParams[0])
    pm.setAttr(nClothShape + ".shearResistance", nClothParams[0])
    pm.setAttr(nClothShape + ".restitutionAngle", nClothParams[0])
    pm.setAttr(nClothShape + ".restitutionTension", nClothParams[0])
    pm.setAttr(nClothShape + ".rigidity", nClothParams[0])
    pm.setAttr(nClothShape + ".deformResistance", nClothParams[0])
    pm.setAttr(nClothShape + ".usePolygonShells", nClothParams[0])
    pm.setAttr(nClothShape + ".inputMeshAttract", nClothParams[0])
    pm.setAttr(nClothShape + ".inputAttractMethod", nClothParams[0])
    pm.setAttr(nClothShape + ".inputAttractDamp", nClothParams[0])
    pm.setAttr(nClothShape + ".inputMotionDrag", nClothParams[0])
    pm.setAttr(nClothShape + ".restLengthScale", nClothParams[0])
    pm.setAttr(nClothShape + ".bendAngleScale", nClothParams[0])
    pm.setAttr(nClothShape + ".mass", nClothParams[0])
    pm.setAttr(nClothShape + ".lift", nClothParams[0])
    pm.setAttr(nClothShape + ".drag", nClothParams[0])
    pm.setAttr(nClothShape + ".tangentialDrag", nClothParams[0])
    pm.setAttr(nClothShape + ".damp", nClothParams[0])
    pm.setAttr(nClothShape + ".stretchDamp", nClothParams[0])
    pm.setAttr(nClothShape + ".scalingRelation", nClothParams[0])
    pm.setAttr(nClothShape + ".ignoreSolverGravity", nClothParams[0])
    pm.setAttr(nClothShape + ".ignoreSolverWind", nClothParams[0])
    pm.setAttr(nClothShape + ".localForce", nClothParams[0])
    pm.setAttr(nClothShape + ".localForceX", nClothParams[0])
    pm.setAttr(nClothShape + ".localForceY", nClothParams[0])
    pm.setAttr(nClothShape + ".localForceZ", nClothParams[0])
    pm.setAttr(nClothShape + ".localWind", nClothParams[0])
    pm.setAttr(nClothShape + ".localWindX", nClothParams[0])
    pm.setAttr(nClothShape + ".localWindY", nClothParams[0])
    pm.setAttr(nClothShape + ".localWindZ", nClothParams[0])
    pm.setAttr(nClothShape + ".stretchMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".stretchMap", nClothParams[0])
    pm.setAttr(nClothShape + ".stretchPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".compressionMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".compressionMap", nClothParams[0])
    pm.setAttr(nClothShape + ".compressionPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".bendMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".bendMap", nClothParams[0])
    pm.setAttr(nClothShape + ".bendPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".bendAngleDropoffMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".bendAngleDropoffMap", nClothParams[0])
    pm.setAttr(nClothShape + ".bendAngleDropoffPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".restitutionAngleMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".restitutionAngleMap", nClothParams[0])
    pm.setAttr(nClothShape + ".restitutionAnglePerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".rigidityMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".rigidityMap", nClothParams[0])
    pm.setAttr(nClothShape + ".rigidityPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".deformMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".deformMap", nClothParams[0])
    pm.setAttr(nClothShape + ".deformPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".inputAttractMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".inputAttractMap", nClothParams[0])
    pm.setAttr(nClothShape + ".inputAttractPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".restLengthScaleMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".restLengthScaleMap", nClothParams[0])
    pm.setAttr(nClothShape + ".restLengthScalePerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".dampMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".dampMap", nClothParams[0])
    pm.setAttr(nClothShape + ".dampPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".massMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".massMap", nClothParams[0])
    pm.setAttr(nClothShape + ".massPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".liftMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".liftMap", nClothParams[0])
    pm.setAttr(nClothShape + ".liftPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".dragMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".dragMap", nClothParams[0])
    pm.setAttr(nClothShape + ".dragPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".tangentialDragMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".tangentialDragMap", nClothParams[0])
    pm.setAttr(nClothShape + ".tangentialDragPerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".wrinkleMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".wrinkleMap", nClothParams[0])
    pm.setAttr(nClothShape + ".wrinklePerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".wrinkleMapScale", nClothParams[0])
    pm.setAttr(nClothShape + ".forceField", nClothParams[0])
    pm.setAttr(nClothShape + ".fieldMagnitude", nClothParams[0])
    pm.setAttr(nClothShape + ".fieldDistance", nClothParams[0])
    pm.setAttr(nClothShape + ".fieldScale", nClothParams[0])
    pm.setAttr(nClothShape + ".fieldScale.fieldScale_Position", nClothParams[0]
    pm.setAttr(nClothShape + ".fieldScale.fieldScale_FloatValue", nClothParams[0])
    pm.setAttr(nClothShape + ".fieldScale.fieldScale_Interp", nClothParams[0])
    pm.setAttr(nClothShape + ".fieldMagnitudeMapType", nClothParams[0])
    pm.setAttr(nClothShape + ".fieldMagnitudeMap", nClothParams[0])
    pm.setAttr(nClothShape + ".fieldMagnitudePerVertex", nClothParams[0])
    pm.setAttr(nClothShape + ".airPushDistance", nClothParams[0])
    pm.setAttr(nClothShape + ".airPushVorticity", nClothParams[0])
    pm.setAttr(nClothShape + ".windShadowDistance", nClothParams[0])
    pm.setAttr(nClothShape + ".windShadowDiffusion", nClothParams[0])
    pm.setAttr(nClothShape + ".windSelfShadow", nClothParams[0])
    pm.setAttr(nClothShape + ".pressureMethod", nClothParams[0])
    pm.setAttr(nClothShape + ".pressure", nClothParams[0])
    pm.setAttr(nClothShape + ".pressureDamping", nClothParams[0])
    pm.setAttr(nClothShape + ".startPressure", nClothParams[0])
    pm.setAttr(nClothShape + ".pumpRate", nClothParams[0])
    pm.setAttr(nClothShape + ".airTightness", nClothParams[0])
    pm.setAttr(nClothShape + ".incompressibility", nClothParams[0])
    pm.setAttr(nClothShape + ".sealHoles", nClothParams[0])
    pm.setAttr(nClothShape + ".maxIterations", nClothParams[0])
    pm.setAttr(nClothShape + ".maxSelfCollisionIterations", nClothParams[0])
    pm.setAttr(nClothShape + ".collideLastThreshold", nClothParams[0])
    pm.setAttr(nClothShape + ".addCrossLinks", nClothParams[0])
    pm.setAttr(nClothShape + ".evaluationOrder", nClothParams[0])
    pm.setAttr(nClothShape + ".bendSolver", nClothParams[0])
    pm.setAttr(nClothShape + ".sortLinks", nClothParams[0])
    pm.setAttr(nClothShape + ".trappedCheck", nClothParams[0])
    pm.setAttr(nClothShape + ".selfTrappedCheck", nClothParams[0])
    pm.setAttr(nClothShape + ".pushOut", nClothParams[0])
    pm.setAttr(nClothShape + ".pushOutRadius", nClothParams[0])
    pm.setAttr(nClothShape + ".crossoverPush", nClothParams[0])
    pm.setAttr(nClothShape + ".selfCrossoverPush", nClothParams[0])
    pm.setAttr(nClothShape + ".cacheableAttributes", nClothParams[0])
    pm.setAttr(nClothShape + ".cacheUsage", nClothParams[0])
    pm.setAttr(nClothShape + ".startFrame", nClothParams[0])
    pm.setAttr(nClothShape + ".currentTime", nClothParams[0])

def getNClothParam(nClothShape):
    isDynamic = pm.getAttr(nClothShape + ".isDynamic")
    collide = pm.getAttr(nClothShape + ".collide")
    selfCollide = pm.getAttr(nClothShape + ".selfCollide")
    collisionFlag = pm.getAttr(nClothShape + ".collisionFlag")
    selfCollisionFlag = pm.getAttr(nClothShape + ".selfCollisionFlag")
    collideStrength = pm.getAttr(nClothShape + ".collideStrength")
    collisionLayer = pm.getAttr(nClothShape + ".collisionLayer")
    thickness = pm.getAttr(nClothShape + ".thickness")
    selfCollideWidthScale = pm.getAttr(nClothShape + ".selfCollideWidthScale")
    solverDisplay = pm.getAttr(nClothShape + ".solverDisplay")
    displayColor = pm.getAttr(nClothShape + ".displayColor")
    displayColorR = pm.getAttr(nClothShape + ".displayColorR")
    displayColorG = pm.getAttr(nClothShape + ".displayColorG")
    displayColorB = pm.getAttr(nClothShape + ".displayColorB")
    bounce = pm.getAttr(nClothShape + ".bounce")
    friction = pm.getAttr(nClothShape + ".friction")
    stickiness = pm.getAttr(nClothShape + ".stickiness")
    collideStrengthMapType = pm.getAttr(nClothShape + ".collideStrengthMapType")
    collideStrengthMap = pm.getAttr(nClothShape + ".collideStrengthMap")
    collideStrengthPerVertex = pm.getAttr(nClothShape + ".collideStrengthPerVertex")
    thicknessMapType = pm.getAttr(nClothShape + ".thicknessMapType")
    thicknessMap = pm.getAttr(nClothShape + ".thicknessMap")
    thicknessPerVertex = pm.getAttr(nClothShape + ".thicknessPerVertex")
    bounceMapType = pm.getAttr(nClothShape + ".bounceMapType")
    bounceMap = pm.getAttr(nClothShape + ".bounceMap")
    bouncePerVertex = pm.getAttr(nClothShape + ".bouncePerVertex")
    frictionMapType = pm.getAttr(nClothShape + ".frictionMapType")
    frictionMap = pm.getAttr(nClothShape + ".frictionMap")
    frictionPerVertex = pm.getAttr(nClothShape + ".frictionPerVertex")
    stickinessMapType = pm.getAttr(nClothShape + ".stickinessMapType")
    stickinessMap = pm.getAttr(nClothShape + ".stickinessMap")
    stickinessPerVertex = pm.getAttr(nClothShape + ".stickinessPerVertex")
    stretchResistance = pm.getAttr(nClothShape + ".stretchResistance")
    compressionResistance = pm.getAttr(nClothShape + ".compressionResistance")
    bendResistance = pm.getAttr(nClothShape + ".bendResistance")
    bendAngleDropoff = pm.getAttr(nClothShape + ".bendAngleDropoff")
    shearResistance = pm.getAttr(nClothShape + ".shearResistance")
    restitutionAngle = pm.getAttr(nClothShape + ".restitutionAngle")
    restitutionTension = pm.getAttr(nClothShape + ".restitutionTension")
    rigidity = pm.getAttr(nClothShape + ".rigidity")
    deformResistance = pm.getAttr(nClothShape + ".deformResistance")
    usePolygonShells = pm.getAttr(nClothShape + ".usePolygonShells")
    inputMeshAttract = pm.getAttr(nClothShape + ".inputMeshAttract")
    inputAttractMethod = pm.getAttr(nClothShape + ".inputAttractMethod")
    inputAttractDamp = pm.getAttr(nClothShape + ".inputAttractDamp")
    inputMotionDrag = pm.getAttr(nClothShape + ".inputMotionDrag")
    restLengthScale = pm.getAttr(nClothShape + ".restLengthScale")
    bendAngleScale = pm.getAttr(nClothShape + ".bendAngleScale")
    mass = pm.getAttr(nClothShape + ".pointMass")
    lift = pm.getAttr(nClothShape + ".lift")
    drag = pm.getAttr(nClothShape + ".drag")
    tangentialDrag = pm.getAttr(nClothShape + ".tangentialDrag")
    damp = pm.getAttr(nClothShape + ".damp")
    stretchDamp = pm.getAttr(nClothShape + ".stretchDamp")
    scalingRelation = pm.getAttr(nClothShape + ".scalingRelation")
    ignoreSolverGravity = pm.getAttr(nClothShape + ".ignoreSolverGravity")
    ignoreSolverWind = pm.getAttr(nClothShape + ".ignoreSolverWind")
    localForce = pm.getAttr(nClothShape + ".localForce")
    localForceX = pm.getAttr(nClothShape + ".localForceX")
    localForceY = pm.getAttr(nClothShape + ".localForceY")
    localForceZ = pm.getAttr(nClothShape + ".localForceZ")
    localWind = pm.getAttr(nClothShape + ".localWind")
    localWindX = pm.getAttr(nClothShape + ".localWindX")
    localWindY = pm.getAttr(nClothShape + ".localWindY")
    localWindZ = pm.getAttr(nClothShape + ".localWindZ")
    stretchMapType = pm.getAttr(nClothShape + ".stretchMapType")
    stretchMap = pm.getAttr(nClothShape + ".stretchMap")
    stretchPerVertex = pm.getAttr(nClothShape + ".stretchPerVertex")
    compressionMapType = pm.getAttr(nClothShape + ".compressionMapType")
    compressionMap = pm.getAttr(nClothShape + ".compressionMap")
    compressionPerVertex = pm.getAttr(nClothShape + ".compressionPerVertex")
    bendMapType = pm.getAttr(nClothShape + ".bendMapType")
    bendMap = pm.getAttr(nClothShape + ".bendMap")
    bendPerVertex = pm.getAttr(nClothShape + ".bendPerVertex")
    bendAngleDropoffMapType = pm.getAttr(nClothShape + ".bendAngleDropoffMapType")
    bendAngleDropoffMap = pm.getAttr(nClothShape + ".bendAngleDropoffMap")
    bendAngleDropoffPerVertex = pm.getAttr(nClothShape + ".bendAngleDropoffPerVertex")
    restitutionAngleMapType = pm.getAttr(nClothShape + ".restitutionAngleMapType")
    restitutionAngleMap = pm.getAttr(nClothShape + ".restitutionAngleMap")
    restitutionAnglePerVertex = pm.getAttr(nClothShape + ".restitutionAnglePerVertex")
    rigidityMapType = pm.getAttr(nClothShape + ".rigidityMapType")
    rigidityMap = pm.getAttr(nClothShape + ".rigidityMap")
    rigidityPerVertex = pm.getAttr(nClothShape + ".rigidityPerVertex")
    deformMapType = pm.getAttr(nClothShape + ".deformMapType")
    deformMap = pm.getAttr(nClothShape + ".deformMap")
    deformPerVertex = pm.getAttr(nClothShape + ".deformPerVertex")
    inputAttractMapType = pm.getAttr(nClothShape + ".inputAttractMapType")
    inputAttractMap = pm.getAttr(nClothShape + ".inputAttractMap")
    inputAttractPerVertex = pm.getAttr(nClothShape + ".inputAttractPerVertex")
    restLengthScaleMapType = pm.getAttr(nClothShape + ".restLengthScaleMapType")
    restLengthScaleMap = pm.getAttr(nClothShape + ".restLengthScaleMap")
    restLengthScalePerVertex = pm.getAttr(nClothShape + ".restLengthScalePerVertex")
    dampMapType = pm.getAttr(nClothShape + ".dampMapType")
    dampMap = pm.getAttr(nClothShape + ".dampMap")
    dampPerVertex = pm.getAttr(nClothShape + ".dampPerVertex")
    massMapType = pm.getAttr(nClothShape + ".massMapType")
    massMap = pm.getAttr(nClothShape + ".massMap")
    massPerVertex = pm.getAttr(nClothShape + ".massPerVertex")
    liftMapType = pm.getAttr(nClothShape + ".liftMapType")
    liftMap = pm.getAttr(nClothShape + ".liftMap")
    liftPerVertex = pm.getAttr(nClothShape + ".liftPerVertex")
    dragMapType = pm.getAttr(nClothShape + ".dragMapType")
    dragMap = pm.getAttr(nClothShape + ".dragMap")
    dragPerVertex = pm.getAttr(nClothShape + ".dragPerVertex")
    tangentialDragMapType = pm.getAttr(nClothShape + ".tangentialDragMapType")
    tangentialDragMap = pm.getAttr(nClothShape + ".tangentialDragMap")
    tangentialDragPerVertex = pm.getAttr(nClothShape + ".tangentialDragPerVertex")
    wrinkleMapType = pm.getAttr(nClothShape + ".wrinkleMapType")
    wrinkleMap = pm.getAttr(nClothShape + ".wrinkleMap")
    wrinklePerVertex = pm.getAttr(nClothShape + ".wrinklePerVertex")
    wrinkleMapScale = pm.getAttr(nClothShape + ".wrinkleMapScale")
    forceField = pm.getAttr(nClothShape + ".forceField")
    fieldMagnitude = pm.getAttr(nClothShape + ".fieldMagnitude")
    fieldDistance = pm.getAttr(nClothShape + ".fieldDistance")
    fieldScale = pm.getAttr(nClothShape + ".fieldScale")
    fieldScale_Position = pm.getAttr(nClothShape + ".fieldScale.fieldScale_Position")
    fieldScale_FloatValue = pm.getAttr(nClothShape + ".fieldScale.fieldScale_FloatValue")
    fieldScale_Interp = pm.getAttr(nClothShape + ".fieldScale.fieldScale_Interp")
    fieldMagnitudeMapType = pm.getAttr(nClothShape + ".fieldMagnitudeMapType")
    fieldMagnitudeMap = pm.getAttr(nClothShape + ".fieldMagnitudeMap")
    fieldMagnitudePerVertex = pm.getAttr(nClothShape + ".fieldMagnitudePerVertex")
    airPushDistance = pm.getAttr(nClothShape + ".airPushDistance")
    airPushVorticity = pm.getAttr(nClothShape + ".airPushVorticity")
    windShadowDistance = pm.getAttr(nClothShape + ".windShadowDistance")
    windShadowDiffusion = pm.getAttr(nClothShape + ".windShadowDiffusion")
    windSelfShadow = pm.getAttr(nClothShape + ".windSelfShadow")
    pressureMethod = pm.getAttr(nClothShape + ".pressureMethod")
    pressure = pm.getAttr(nClothShape + ".pressure")
    pressureDamping = pm.getAttr(nClothShape + ".pressureDamping")
    startPressure = pm.getAttr(nClothShape + ".startPressure")
    pumpRate = pm.getAttr(nClothShape + ".pumpRate")
    airTightness = pm.getAttr(nClothShape + ".airTightness")
    incompressibility = pm.getAttr(nClothShape + ".incompressibility")
    sealHoles = pm.getAttr(nClothShape + ".sealHoles")
    maxIterations = pm.getAttr(nClothShape + ".maxIterations")
    maxSelfCollisionIterations = pm.getAttr(nClothShape + ".maxSelfCollisionIterations")
    collideLastThreshold = pm.getAttr(nClothShape + ".collideLastThreshold")
    addCrossLinks = pm.getAttr(nClothShape + ".addCrossLinks")
    evaluationOrder = pm.getAttr(nClothShape + ".evaluationOrder")
    bendSolver = pm.getAttr(nClothShape + ".bendSolver")
    sortLinks = pm.getAttr(nClothShape + ".sortLinks")
    trappedCheck = pm.getAttr(nClothShape + ".trappedCheck")
    selfTrappedCheck = pm.getAttr(nClothShape + ".selfTrappedCheck")
    pushOut = pm.getAttr(nClothShape + ".pushOut")
    pushOutRadius = pm.getAttr(nClothShape + ".pushOutRadius")
    crossoverPush = pm.getAttr(nClothShape + ".crossoverPush")
    selfCrossoverPush = pm.getAttr(nClothShape + ".selfCrossoverPush")
    cacheableAttributes = pm.getAttr(nClothShape + ".cacheableAttributes")
    cacheUsage = pm.getAttr(nClothShape + ".cacheUsage")
    startFrame = pm.getAttr(nClothShape + ".startFrame")
    currentTime = pm.getAttr(nClothShape + ".currentTime")

objShape = ""
json_file = ".json"

with open(json_file, 'r') as f:
	get_json = json.load(f)
    setNClothParam(objShape,get_json)
    getNClothParam(objShape)